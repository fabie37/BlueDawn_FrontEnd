[{"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/index.js":"1","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/App.js":"2","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/socket/constants.js":"3","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/api/get.js":"4","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Container/Container.js":"5","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Title/Title.js":"6","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/dates.js":"7","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/GraphContainer.js":"8","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Pie/PieContainer.js":"9","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/totals.js":"10","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/graph_stuff.js":"11","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/LineGraph.js":"12"},{"size":318,"mtime":1612219552363,"results":"13","hashOfConfig":"14"},{"size":814,"mtime":1612219552363,"results":"15","hashOfConfig":"14"},{"size":184,"mtime":1612219552363,"results":"16","hashOfConfig":"14"},{"size":396,"mtime":1612219552363,"results":"17","hashOfConfig":"14"},{"size":3607,"mtime":1612224156513,"results":"18","hashOfConfig":"14"},{"size":2024,"mtime":1612219552363,"results":"19","hashOfConfig":"14"},{"size":2439,"mtime":1612219552363,"results":"20","hashOfConfig":"14"},{"size":1801,"mtime":1612219552363,"results":"21","hashOfConfig":"14"},{"size":160,"mtime":1612219552363,"results":"22","hashOfConfig":"14"},{"size":743,"mtime":1612219552363,"results":"23","hashOfConfig":"14"},{"size":1048,"mtime":1612219552363,"results":"24","hashOfConfig":"14"},{"size":1808,"mtime":1612219552363,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"6hh9t5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/index.js",[],["54","55"],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/App.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/socket/constants.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/api/get.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Container/Container.js",["56"],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Title/Title.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/dates.js",["57"],"const get_purchases_in_date_range = (startDate, endDate, purchases) => {\n    let inRangePurchases = new Array();\n\n    purchases['data'].forEach((purchase) => {\n        const purchaseDate = new Date(purchase['date'].split('T')[0]);\n        if (\n            startDate.getTime() <= purchaseDate.getTime() &&\n            endDate.getTime() >= purchaseDate.getTime()\n        ) {\n            inRangePurchases.push(purchase);\n        }\n    });\n\n    return inRangePurchases;\n};\n\nconst get_month_range = (offset = 0) => {\n    let month = {};\n    let now = new Date();\n    now.setTime(Date.now());\n    now.setMonth(now.getMonth() + offset);\n    now.setHours(0, 0, 0, 0);\n\n    let startDate = new Date();\n    startDate.setDate(1);\n    startDate.setMonth(now.getMonth());\n    startDate.setHours(0, 0, 0, 0);\n\n    let endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    endDate.setHours(0, 0, 0, 0);\n\n    month['startDate'] = startDate;\n    month['endDate'] = endDate;\n\n    return month;\n};\n\nconst get_week_range = (offset = 0) => {\n    let week = {};\n    let now = new Date();\n    now.setTime(Date.now());\n    now.setDate(now.getDate() + offset);\n    now.setHours(0, 0, 0, 0);\n    let day = now.getDay();\n\n    let startDate = new Date();\n    let endDate = new Date();\n\n    startDate.setDate(now.getDate() - day + 1);\n    startDate.setMonth(now.getMonth());\n    startDate.setHours(0, 0, 0, 0);\n    endDate.setMonth(startDate.getMonth());\n    endDate.setDate(startDate.getDate() + 6);\n    endDate.setHours(0, 0, 0, 0);\n\n    week['startDate'] = startDate;\n    week['endDate'] = endDate;\n\n    return week;\n};\n\nconst date_to_daymonth = (date) => {\n    const month = format_month(date.getMonth() + 1);\n    const day = date.getDate();\n    return day + '/' + month;\n};\n\nconst format_month = (month) => {\n    let monthString = month.toString();\n    if (monthString.length === 1) {\n        monthString = '0' + monthString;\n    }\n    return monthString;\n};\n\nconst getDaysArray = function (start, end) {\n    for (\n        var arr = [], dt = new Date(start);\n        dt <= end;\n        dt.setDate(dt.getDate() + 1)\n    ) {\n        arr.push(new Date(dt));\n    }\n    return arr;\n};\n\nexports.getDaysArray = getDaysArray;\nexports.date_to_daymonth = date_to_daymonth;\nexports.get_purchases_in_date_range = get_purchases_in_date_range;\nexports.get_week_range = get_week_range;\nexports.format_month = format_month;\nexports.get_month_range = get_month_range;\n","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/GraphContainer.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Pie/PieContainer.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/totals.js",["58"],"const get_purchases_total = (purchases) => {\n    let total = 0;\n    purchases.map((purchase) => {\n        total += purchase['total'];\n    });\n    return total;\n};\n\nconst to_currency = (total) => {\n    total /= 100;\n    return total.toFixed(2);\n};\n\nconst percentage_change = (last, current) => {\n    if (last === 0 && current !== 0) {\n        return 100.0;\n    }\n    if (last !== 0 && current === 0) {\n        return -100.0;\n    }\n    if (last === 0 && current === 0) {\n        return 0.0;\n    }\n    if (last === current) {\n        return 0.0;\n    }\n    return (((current - last) / last) * 100).toFixed(1);\n};\n\nexports.percentage_change = percentage_change;\nexports.to_currency = to_currency;\nexports.get_purchases_total = get_purchases_total;\n","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/graph_stuff.js",["59"],"const range_to_data = (purchases, days_in_range) => {\n    let week_dir = {};\n    for (let i = 0; i < days_in_range.length; i++) {\n        week_dir[days_in_range[i].getDate()] = 0;\n    }\n\n    let sorted_data = purchases.sort(function (a, b) {\n        return new Date(a.date) - new Date(b.date);\n    });\n    sorted_data.forEach((purchase) => {\n        let date = new Date(purchase.date).getDate();\n        week_dir[date] += purchase.total / 100;\n    });\n    let cumsum = 0;\n    for (let i = 0; i < days_in_range.length; i++) {\n        let this_val = week_dir[days_in_range[i].getDate()];\n        week_dir[days_in_range[i].getDate()] += cumsum;\n        cumsum += this_val;\n    }\n\n    let data = [];\n    for (var time in week_dir) {\n        for (var date of days_in_range) {\n            let temp = new Date(date);\n            temp.setHours(0, 0, 0, 0);\n            if (date.getDate() == time) {\n                data.push({ value: week_dir[time], time: temp });\n            }\n        }\n    }\n\n    return data;\n};\n\nexports.range_to_data = range_to_data;\n","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/LineGraph.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":36,"column":28,"nodeType":"66","messageId":"67","endLine":36,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":2,"column":28,"nodeType":"70","messageId":"71","endLine":2,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":3,"column":30,"nodeType":"74","messageId":"75","endLine":3,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":26,"column":32,"nodeType":"66","messageId":"67","endLine":26,"endColumn":34},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]