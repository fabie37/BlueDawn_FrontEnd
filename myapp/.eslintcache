[{"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/index.js":"1","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/App.js":"2","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/socket/constants.js":"3","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/api/get.js":"4","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Container/Container.js":"5","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Title/Title.js":"6","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Card/Card.js":"7","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/utils/dates.js":"8","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/utils/totals.js":"9","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Graph/GraphContainer.js":"10","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Graph/LineGraph.js":"11"},{"size":318,"mtime":1611966868300,"results":"12","hashOfConfig":"13"},{"size":814,"mtime":1612000878591,"results":"14","hashOfConfig":"13"},{"size":165,"mtime":1611966868300,"results":"15","hashOfConfig":"13"},{"size":396,"mtime":1611966868300,"results":"16","hashOfConfig":"13"},{"size":1314,"mtime":1612007693395,"results":"17","hashOfConfig":"13"},{"size":2125,"mtime":1611966868300,"results":"18","hashOfConfig":"13"},{"size":136,"mtime":1611966868300,"results":"19","hashOfConfig":"13"},{"size":1672,"mtime":1612006062187,"results":"20","hashOfConfig":"13"},{"size":743,"mtime":1611966868300,"results":"21","hashOfConfig":"13"},{"size":1778,"mtime":1612007164869,"results":"22","hashOfConfig":"13"},{"size":1296,"mtime":1612004724723,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1iglpg2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/index.js",[],["52","53"],"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/App.js",[],"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/socket/constants.js",["54"],"const ENV = 'developement';\n\nconst SEND_PURCHASES = 'send_purchases';\n\nexports.ENDPOINT = process.env.REACT_APP_SOCKET_URI;\nexports.SEND_PURCHASES = SEND_PURCHASES;\n","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/api/get.js",[],"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Container/Container.js",[],"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Title/Title.js",["55","56","57","58"],"import React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card';\nimport './Title.css';\nimport { BiCaretUp, BiCaretDown, BiMinus } from 'react-icons/bi';\nimport { format_month, date_to_daymonth } from '../../utils/dates';\nimport {\n    get_purchases_total,\n    to_currency,\n    percentage_change,\n} from '../../utils/totals';\n\nconst Title = ({ this_week_purchases, last_week_purchases, week }) => {\n    // Managing The Dates\n    let start = '';\n    let end = '';\n\n    if (week) {\n        start = date_to_daymonth(week['startDate']);\n        end = date_to_daymonth(week['endDate']);\n    }\n\n    // Managing the totals\n    let thisWeekTotal;\n    let lastWeekTotal;\n\n    if (this_week_purchases) {\n        thisWeekTotal = get_purchases_total(this_week_purchases);\n        thisWeekTotal = to_currency(thisWeekTotal);\n    }\n\n    if (last_week_purchases) {\n        lastWeekTotal = get_purchases_total(last_week_purchases);\n        lastWeekTotal = to_currency(lastWeekTotal);\n    }\n\n    // Managing the percent change\n    let percentDelta = 0;\n\n    if (thisWeekTotal && lastWeekTotal) {\n        percentDelta = percentage_change(lastWeekTotal, thisWeekTotal);\n    }\n\n    let symbol;\n    let class_name = 'ticker ';\n    if (percentDelta === 0) {\n        class_name += 'same';\n        symbol = <BiMinus viewBox='0 0 24 15' />;\n    } else if (percentDelta > 0) {\n        class_name += 'increase';\n        symbol = <BiCaretUp viewBox='0 0 24 15' />;\n    } else {\n        class_name += 'decrease';\n        symbol = <BiCaretDown viewBox='0 0 24 15' />;\n    }\n\n    return (\n        <div className='title'>\n            <div className='main'>\n                Total: £{thisWeekTotal ? thisWeekTotal : '0.00'}\n            </div>\n            <div className={class_name}>\n                {symbol}\n                {percentDelta}%\n            </div>\n            <div className='secondary'>\n                Last Week: £{lastWeekTotal ? lastWeekTotal : '0.00'}\n            </div>\n\n            <div className='date'>\n                {start} {week ? '-' : ''} {end}\n            </div>\n        </div>\n    );\n};\n\nexport default Title;\n","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Card/Card.js",[],"/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/utils/dates.js",["59","60"],"const get_purchases_in_date_range = (startDate, endDate, purchases) => {\n    let inRangePurchases = new Array();\n\n    purchases['data'].forEach((purchase) => {\n        const purchaseDate = new Date(purchase['date'].split('T')[0]);\n        if (\n            startDate.getTime() <= purchaseDate.getTime() &&\n            endDate.getTime() >= purchaseDate.getTime()\n        ) {\n            inRangePurchases.push(purchase);\n        }\n    });\n\n    return inRangePurchases;\n};\n\nconst get_week_range = (offset = 0) => {\n    let week = {};\n    let now = new Date();\n    now.setTime(Date.now());\n    now.setDate(now.getDate() + offset);\n    let day = now.getDay();\n\n    let startDate = new Date();\n    let endDate = new Date();\n\n    startDate.setDate(now.getDate() - day + 1);\n    endDate.setDate(now.getDate() + (7 - day));\n\n    week['startDate'] = startDate;\n    week['endDate'] = endDate;\n\n    return week;\n};\n\nconst date_to_daymonth = (date) => {\n    const month = format_month(date.getMonth() + 1);\n    const day = date.getDate();\n    return day + '/' + month;\n};\n\nconst format_month = (month) => {\n    let monthString = month.toString();\n    if (monthString.length == 1) {\n        monthString = '0' + monthString;\n    }\n    return monthString;\n};\n\nconst getDaysArray = function(start, end) {\n    console.log(start)\n    for(var arr=[],dt=new Date(start); dt<=end; dt.setDate(dt.getDate()+1)){\n        arr.push(new Date(dt));\n    }\n    return arr;\n};\n\nexports.getDaysArray = getDaysArray;\nexports.date_to_daymonth = date_to_daymonth;\nexports.get_purchases_in_date_range = get_purchases_in_date_range;\nexports.get_week_range = get_week_range;\nexports.format_month = format_month;\n","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/utils/totals.js",["61"],"const get_purchases_total = (purchases) => {\n    let total = 0;\n    purchases.map((purchase) => {\n        total += purchase['total'];\n    });\n    return total;\n};\n\nconst to_currency = (total) => {\n    total /= 100;\n    return total.toFixed(2);\n};\n\nconst percentage_change = (last, current) => {\n    if (last === 0 && current !== 0) {\n        return 100.0;\n    }\n    if (last !== 0 && current === 0) {\n        return -100.0;\n    }\n    if (last === 0 && current === 0) {\n        return 0.0;\n    }\n    if (last === current) {\n        return 0.0;\n    }\n    return (((current - last) / last) * 100).toFixed(1);\n};\n\nexports.percentage_change = percentage_change;\nexports.to_currency = to_currency;\nexports.get_purchases_total = get_purchases_total;\n","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Graph/GraphContainer.js",["62","63"],"import React, { useRef } from 'react';\nimport './Graph.css';\nimport LineGraph from './LineGraph';\nimport { getDaysArray } from '../../utils/dates'\n\nconst GraphContainer = ({ this_week_purchases, week }) => {\n\n    let days_in_week = getDaysArray(week.startDate, week.endDate);\n    let week_dir = {};\n    for (let i=0; i < days_in_week.length; i++) {\n        week_dir[days_in_week[i].getDate()] = 0;\n    }\n    \n    let sorted_data = this_week_purchases.sort(function(a,b) { return new Date(a.date) - new Date(b.date)});\n    sorted_data.forEach(purchase => {\n        let date = new Date(purchase.date).getDate();\n        week_dir[date] += purchase.total/100\n    });\n    let cumsum = 0;\n    for (let i=0; i < days_in_week.length; i++) {\n        let this_val = week_dir[days_in_week[i].getDate()];\n        week_dir[days_in_week[i].getDate()] += cumsum;\n        cumsum += this_val;\n    }\n    /*let sorted_data = this_week_purchases.sort(function(a,b) { return new Date(a.date) - new Date(b.date)});\n    let cumsum = 0;\n    console.log(sorted_data);\n    let data = sorted_data.map((purchase) => {\n        \n        let dataset = { value: cumsum, time: purchase.date };\n        return dataset;\n    });\n    */\n   let data = [];\n   for (var time in week_dir) {\n       for (var date of days_in_week) {\n           let temp = new Date(date);\n           temp.setHours(0,0,0,0);\n           if (date.getDate() == time) {\n            data.push({ 'value': week_dir[time], 'time': temp })\n           }\n       }\n        \n   }\n\n    console.log(data);\n\n\n    return (\n        <div className='graph'>\n            <LineGraph\n                title='This Week'\n                data={data}\n                color=\"#fffffff\">\n            </LineGraph>\n        </div>\n    );\n};\n\nexport default GraphContainer;\n\n","/home/fabie37/Documents/project/BlueDawn_FrontEnd/myapp/src/components/Graph/LineGraph.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":7,"nodeType":"70","messageId":"71","endLine":1,"endColumn":10},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"73","line":1,"column":28,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"74","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"68","severity":1,"message":"75","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":2,"column":28,"nodeType":"78","messageId":"79","endLine":2,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":44,"column":28,"nodeType":"82","messageId":"83","endLine":44,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":3,"column":30,"nodeType":"86","messageId":"87","endLine":3,"endColumn":32},{"ruleId":"68","severity":1,"message":"88","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":39,"column":31,"nodeType":"82","messageId":"83","endLine":39,"endColumn":33},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'ENV' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'format_month' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]