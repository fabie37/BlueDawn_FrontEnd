[{"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/index.js":"1","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/App.js":"2","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/socket/constants.js":"3","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/api/get.js":"4","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Container/Container.js":"5","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Title/Title.js":"6","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/dates.js":"7","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/GraphContainer.js":"8","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Pie/PieContainer.js":"9","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/totals.js":"10","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/graph_stuff.js":"11","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/LineGraph.js":"12","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Pie/PieChart.js":"13"},{"size":318,"mtime":1612219552363,"results":"14","hashOfConfig":"15"},{"size":814,"mtime":1612219552363,"results":"16","hashOfConfig":"15"},{"size":184,"mtime":1612219552363,"results":"17","hashOfConfig":"15"},{"size":396,"mtime":1612219552363,"results":"18","hashOfConfig":"15"},{"size":3487,"mtime":1612537258733,"results":"19","hashOfConfig":"15"},{"size":2024,"mtime":1612219552363,"results":"20","hashOfConfig":"15"},{"size":3043,"mtime":1612305064325,"results":"21","hashOfConfig":"15"},{"size":1801,"mtime":1612307297940,"results":"22","hashOfConfig":"15"},{"size":355,"mtime":1612537870329,"results":"23","hashOfConfig":"15"},{"size":743,"mtime":1612219552363,"results":"24","hashOfConfig":"15"},{"size":1623,"mtime":1612538711110,"results":"25","hashOfConfig":"15"},{"size":6334,"mtime":1612540605645,"results":"26","hashOfConfig":"15"},{"size":5175,"mtime":1612540609929,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6hh9t5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/index.js",[],["58","59"],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/App.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/socket/constants.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/api/get.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Container/Container.js",["60","61","62","63","64","65","66","67"],"import React, { useState, useEffect, useRef } from 'react';\nimport Title from '../Title/Title';\nimport './Container.css';\nimport {\n    get_week_range,\n    get_purchases_in_date_range,\n    get_month_range,\n    get_year_range\n} from '../../utils/dates';\nimport GraphContainer from '../Graph/GraphContainer';\nimport PieContainer from '../Pie/PieContainer';\n\nconst Container = ({ purchases }) => {\n    let this_week_purchases = [];\n    let last_week_purchases = [];\n    let this_month_purchases = [];\n    let last_month_purchases = [];\n    let this_year_purchases = [];\n    let last_year_purchases = [];\n    let week = {};\n    let lastweek = {};\n    let month = {};\n    let lastmonth = {};\n    let year = {};\n    let lastyear = {};\n    \n    const timer = useRef();\n    var [timerIQ, setTimerIQ] = useState(100);\n\n    /*useEffect(() => {\n        timer.current = setTimeout(() => {\n            console.log(timerIQ)\n            console.log(\"Dones\");\n            document.querySelector('div.slider').scrollBy({\n                top: 100,\n                left: timerIQ,\n                behavior: 'smooth'\n              })\n              setTimerIQ((prev) => {\n                \n                  if (prev == 100) { return -100;} else {return 100;}\n              });\n        }, 5000);\n        return () => clearTimeout(timer);\n    }, [timerIQ]) */\n\n    if (purchases) {\n        week = get_week_range();\n        this_week_purchases = get_purchases_in_date_range(\n            week['startDate'],\n            week['endDate'],\n            purchases\n        );\n\n        lastweek = get_week_range(-7);\n        last_week_purchases = get_purchases_in_date_range(\n            lastweek['startDate'],\n            lastweek['endDate'],\n            purchases\n        );\n\n        month = get_month_range();\n        this_month_purchases = get_purchases_in_date_range(\n            month['startDate'],\n            month['endDate'],\n            purchases\n        );\n        lastmonth = get_month_range(-1);\n        last_month_purchases = get_purchases_in_date_range(\n            lastmonth['startDate'],\n            lastmonth['endDate'],\n            purchases\n        );\n\n        year = get_year_range();\n        this_year_purchases = get_purchases_in_date_range(\n            year['startDate'],\n            year['endDate'],\n            purchases\n        );\n\n        lastyear = get_year_range(-1);\n        last_year_purchases = get_purchases_in_date_range(\n            lastyear['startDate'],\n            lastyear['endDate'],\n            purchases\n        );\n\n        console.log(this_month_purchases);\n\n\n        return (\n            <div className='slider'>\n            <div className='container'>\n                <Title\n                    this_time_purchases={this_month_purchases}\n                    last_time_purchases={last_month_purchases}\n                    date_range={month}\n                    timeframe={'Month'}\n                ></Title>\n                <GraphContainer\n                    date_range={month}\n                    last_date_range={lastmonth}\n                    timeframe={'Month'}\n                    this_time_purchases={this_month_purchases}\n                    last_time_purchases={last_month_purchases}\n                ></GraphContainer>\n                <PieContainer purchases={this_month_purchases}></PieContainer>\n            </div>\n            \n            </div>\n        );\n    } else {\n        return <div className='container'>Loading...</div>;\n    }\n};\n\nexport default Container;\n","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Title/Title.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/dates.js",["68"],"const get_purchases_in_date_range = (startDate, endDate, purchases) => {\n    let inRangePurchases = new Array();\n\n    purchases['data'].forEach((purchase) => {\n        const purchaseDate = new Date(purchase['date'].split('T')[0]);\n        if (\n            startDate.getTime() <= purchaseDate.getTime() &&\n            endDate.getTime() >= purchaseDate.getTime()\n        ) {\n            inRangePurchases.push(purchase);\n        }\n    });\n\n    return inRangePurchases;\n};\n\nconst get_year_range = (offset = 0) => {\n    let year = {};\n    let now = new Date();\n    now.setTime(Date.now());\n    now.setFullYear(now.getFullYear() + offset);\n    now.setHours(0, 0, 0, 0);\n\n    let startDate = new Date();\n    startDate.setDate(1);\n    startDate.setMonth(0);\n    startDate.setFullYear(now.getFullYear())\n    startDate.setHours(0, 0, 0, 0);\n\n    let endDate = new Date(now.getFullYear(), 11, 31);\n    endDate.setHours(0, 0, 0, 0);\n\n    year['startDate'] = startDate;\n    year['endDate'] = endDate;\n\n    console.log(year)\n\n    return year;\n};\n\nconst get_month_range = (offset = 0) => {\n    let month = {};\n    let now = new Date();\n    now.setTime(Date.now());\n    now.setMonth(now.getMonth() + offset);\n    now.setHours(0, 0, 0, 0);\n\n    let startDate = new Date();\n    startDate.setDate(1);\n    startDate.setMonth(now.getMonth());\n    startDate.setHours(0, 0, 0, 0);\n\n    let endDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    endDate.setHours(0, 0, 0, 0);\n\n    month['startDate'] = startDate;\n    month['endDate'] = endDate;\n\n    return month;\n};\n\nconst get_week_range = (offset = 0) => {\n    let week = {};\n    let now = new Date();\n    now.setTime(Date.now());\n    now.setDate(now.getDate() + offset);\n    now.setHours(0, 0, 0, 0);\n    let day = now.getDay();\n\n    let startDate = new Date();\n    let endDate = new Date();\n\n    startDate.setDate(now.getDate() - day + 1);\n    startDate.setMonth(now.getMonth());\n    startDate.setHours(0, 0, 0, 0);\n    endDate.setMonth(startDate.getMonth());\n    endDate.setDate(startDate.getDate() + 6);\n    endDate.setHours(0, 0, 0, 0);\n\n    week['startDate'] = startDate;\n    week['endDate'] = endDate;\n\n    return week;\n};\n\nconst date_to_daymonth = (date) => {\n    const month = format_month(date.getMonth() + 1);\n    const day = date.getDate();\n    return day + '/' + month;\n};\n\nconst format_month = (month) => {\n    let monthString = month.toString();\n    if (monthString.length === 1) {\n        monthString = '0' + monthString;\n    }\n    return monthString;\n};\n\nconst getDaysArray = function (start, end) {\n    for (\n        var arr = [], dt = new Date(start);\n        dt <= end;\n        dt.setDate(dt.getDate() + 1)\n    ) {\n        arr.push(new Date(dt));\n    }\n    return arr;\n};\n\nexports.getDaysArray = getDaysArray;\nexports.date_to_daymonth = date_to_daymonth;\nexports.get_purchases_in_date_range = get_purchases_in_date_range;\nexports.get_week_range = get_week_range;\nexports.format_month = format_month;\nexports.get_month_range = get_month_range;\nexports.get_year_range = get_year_range;\n","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/GraphContainer.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Pie/PieContainer.js",[],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/totals.js",["69"],"const get_purchases_total = (purchases) => {\n    let total = 0;\n    purchases.map((purchase) => {\n        total += purchase['total'];\n    });\n    return total;\n};\n\nconst to_currency = (total) => {\n    total /= 100;\n    return total.toFixed(2);\n};\n\nconst percentage_change = (last, current) => {\n    if (last === 0 && current !== 0) {\n        return 100.0;\n    }\n    if (last !== 0 && current === 0) {\n        return -100.0;\n    }\n    if (last === 0 && current === 0) {\n        return 0.0;\n    }\n    if (last === current) {\n        return 0.0;\n    }\n    return (((current - last) / last) * 100).toFixed(1);\n};\n\nexports.percentage_change = percentage_change;\nexports.to_currency = to_currency;\nexports.get_purchases_total = get_purchases_total;\n","/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/utils/graph_stuff.js",["70"],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Graph/LineGraph.js",["71","72","73","74","75","76"],"/home/fabie37/Documents/project/BlueDawn_Frontend/myapp/src/components/Pie/PieChart.js",["77","78","79","80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"91","line":27,"column":11,"nodeType":"89","messageId":"90","endLine":27,"endColumn":16},{"ruleId":"87","severity":1,"message":"92","line":28,"column":10,"nodeType":"89","messageId":"90","endLine":28,"endColumn":17},{"ruleId":"87","severity":1,"message":"93","line":28,"column":19,"nodeType":"89","messageId":"90","endLine":28,"endColumn":29},{"ruleId":"87","severity":1,"message":"94","line":49,"column":9,"nodeType":"89","messageId":"90","endLine":49,"endColumn":28},{"ruleId":"87","severity":1,"message":"95","line":56,"column":9,"nodeType":"89","messageId":"90","endLine":56,"endColumn":28},{"ruleId":"87","severity":1,"message":"96","line":76,"column":9,"nodeType":"89","messageId":"90","endLine":76,"endColumn":28},{"ruleId":"87","severity":1,"message":"97","line":83,"column":9,"nodeType":"89","messageId":"90","endLine":83,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":2,"column":28,"nodeType":"100","messageId":"101","endLine":2,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":3,"column":30,"nodeType":"104","messageId":"105","endLine":3,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":28,"column":32,"nodeType":"108","messageId":"109","endLine":28,"endColumn":34},{"ruleId":"110","severity":1,"message":"111","line":69,"column":9,"nodeType":"112","messageId":"113","endLine":97,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":107,"column":9,"nodeType":"112","messageId":"113","endLine":118,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":115,"column":21,"nodeType":"89","messageId":"116","endLine":115,"endColumn":29},{"ruleId":"114","severity":1,"message":"117","line":116,"column":21,"nodeType":"89","messageId":"116","endLine":116,"endColumn":30},{"ruleId":"114","severity":1,"message":"118","line":144,"column":18,"nodeType":"89","messageId":"116","endLine":144,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":145,"column":13,"nodeType":"112","messageId":"113","endLine":161,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":38,"column":9,"nodeType":"112","messageId":"113","endLine":66,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":76,"column":9,"nodeType":"112","messageId":"113","endLine":87,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":84,"column":21,"nodeType":"89","messageId":"116","endLine":84,"endColumn":29},{"ruleId":"114","severity":1,"message":"117","line":85,"column":21,"nodeType":"89","messageId":"116","endLine":85,"endColumn":30},{"ruleId":"114","severity":1,"message":"118","line":113,"column":18,"nodeType":"89","messageId":"116","endLine":113,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":114,"column":13,"nodeType":"112","messageId":"113","endLine":130,"endColumn":14},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'timer' is assigned a value but never used.","'timerIQ' is assigned a value but never used.","'setTimerIQ' is assigned a value but never used.","'this_week_purchases' is assigned a value but never used.","'last_week_purchases' is assigned a value but never used.","'this_year_purchases' is assigned a value but never used.","'last_year_purchases' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-redeclare","'datasets' is already defined.","redeclared","'setsCount' is already defined.","'i' is already defined.","no-global-assign","no-unsafe-negation"]